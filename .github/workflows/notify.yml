name: Act on release

on: 
  workflow_call:
    secrets:
      TELEGRAM_TO:
        required: true
      TELEGRAM_TOKEN:
        required: true
  workflow_dispatch:
      

jobs:
  Notify_Release:
    name: Notify Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
          
      - name: Switch to release branch
        run: git checkout -f release || git switch --discard-changes --orphan update
        
      - name: Update release JSON
        run: |
          curl https://api.github.com/repos/${{ github.repository }}/releases/latest > release.json
          
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          
      - name: Push release.json
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: release
          skip_checkout: true
          file_pattern: release.json
          commit_message: Update release.json on ${{ steps.date.outputs.date }}
          
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      - uses: jannekem/run-python-script-action@v1
        id: pyscript
        with:
          script: |
            import json
            import re

            # Read release.json file
            with open('release.json', 'r') as f:
                release = json.load(f)

            print(release['name'], end="\n\n")
            
            print(re.findall(r"CLI:[a-zA-Z-.\s0-9:]+\n", release['body'])[0] or "")
            
            print("*â‰£ Note:* \n âžœ `mindetach.zip` is used to detach play store updates for YT and YT Music for rooted users.\n âžœ Use `vanced microg` for non root YT and YT Music.", end="\n\n")

            print("ðŸ“¦ *Downloads* \n")

            # Collect browser_download_url from assets in release
            nonroot_files = []
            root_files = []
            
            for asset in release['assets'][::-1]:
                file_name = asset['name']
                file_url = asset['browser_download_url']
                if '.zip' in file_name:
                  root_files.append(f"ðŸ”— [{file_name}]({file_url})")
                else:
                  nonroot_files.append(f"ðŸ”— [{file_name}]({file_url})")
                  
            print("Non-Root:")
            print("\n".join(nonroot_files))
            
            print()
            
            print("Magisk (Root):")
            print("\n".join(root_files))
          
      - name: Telegram Channel Update
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            ðŸ“‘ *RELEASE*
            
            ${{ steps.pyscript.outputs.stdout }}
            
            Credits to our upstream repository [j-hc/revanced-magisk-module](https://github.com/j-hc/revanced-magisk-module)
            
            @revanced_apks_web | revanced-apks.pages.dev
